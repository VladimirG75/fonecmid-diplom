#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий   

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Движения по регистру ВКМ_ВзаиморасчетыССотрудниками
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Для Каждого СтрокаВыплаты Из Выплаты Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Сотрудник = СтрокаВыплаты.Сотрудник;
		Движение.Сумма = СтрокаВыплаты.СуммаВыплаты;
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.БлокироватьДляИзменения = Истина;
	Движения.Записать();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник КАК Сотрудник,
	|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(
	|			&Граница,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВКМ_ВыплатаЗарплатыВыплаты.Сотрудник КАК Сотрудник
	|				ИЗ
	|					Документ.ВКМ_ВыплатаЗарплаты.Выплаты КАК ВКМ_ВыплатаЗарплатыВыплаты
	|				ГДЕ
	|					ВКМ_ВыплатаЗарплатыВыплаты.Ссылка = &Ссылка)) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки
	|ГДЕ
	|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток < 0");
	
	Запрос.УстановитьПараметр("Граница", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("По сотруднику %1 не возможно произвести выплату, сумма начисления превышает на %2", 
		Выборка.Сотрудник, -Выборка.СуммаОстаток),,,,Отказ);
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти 

#КонецЕсли