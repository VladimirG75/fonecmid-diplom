#Область ОбработчикиСобытийФормы  
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 УстановитьУсловноеОформление();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ГрафикОтпусковОтпускаСотрудников.Сотрудник КАК Сотрудник,
	|	СУММА(РАЗНОСТЬДАТ(ВКМ_ГрафикОтпусковОтпускаСотрудников.ДатаНачала, ВКМ_ГрафикОтпусковОтпускаСотрудников.ДатаОкончания, ДЕНЬ) + 1) КАК ДнейОтпуска
	|ПОМЕСТИТЬ ВТ_ПродолжительностьОтпуска
	|ИЗ
	|	Документ.ВКМ_ГрафикОтпусков.ОтпускаСотрудников КАК ВКМ_ГрафикОтпусковОтпускаСотрудников
	|ГДЕ
	|	ВКМ_ГрафикОтпусковОтпускаСотрудников.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ГрафикОтпусковОтпускаСотрудников.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПродолжительностьОтпуска.Сотрудник КАК Сотрудник,
	|	ВТ_ПродолжительностьОтпуска.ДнейОтпуска КАК ДнейОтпуска
	|ИЗ
	|	ВТ_ПродолжительностьОтпуска КАК ВТ_ПродолжительностьОтпуска
	|ГДЕ
	|	ВТ_ПродолжительностьОтпуска.ДнейОтпуска > 28";
	
	Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл   
		
		Отбор = Новый Структура;
		Отбор.Вставить("Сотрудник", Выборка.Сотрудник);
		
		НайденныйСотрудник = ТекущийОбъект.ОтпускаСотрудников.НайтиСтроки(Отбор);
		
		Если НайденныйСотрудник.Количество() <> 0 Тогда
			Для Каждого Сотрудник Из НайденныйСотрудник Цикл 
				Сотрудник.ПревышениеЛимитаОтпуска = Истина;
			КонецЦикла;
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("У сотрудника %1 общая продолжительность всех отпусков превышает 28 дней и составляет %2 дней. Превышено на %3 дней.",
			Выборка.Сотрудник, Выборка.ДнейОтпуска, Выборка.ДнейОтпуска - 28));
		КонецЕсли ;   	
	КонецЦикла; 
	
	УстановитьУсловноеОформление();
	 
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура АнализГрафика(Команда)  
	
	ПараметрыФормы = Новый Структура;	
	ПараметрыФормы.Вставить("Адрес", ПоместитьДанныеВоВременноеХранилище()); 
	
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.ФормаАнализГрафика", ПараметрыФормы, ЭтотОбъект);       
	
КонецПроцедуры 
#КонецОбласти   

#Область СлужебныеПроцедурыИФункции
&НаСервере                                       
Функция ПоместитьДанныеВоВременноеХранилище() 
	
	ТаблицаОтпускников = Объект.ОтпускаСотрудников.Выгрузить();

	Адрес = ПоместитьВоВременноеХранилище(ТаблицаОтпускников, УникальныйИдентификатор);  
	
	Возврат Адрес;

КонецФункции  

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Отпускник  = УсловноеОформление.Элементы.Добавить();
	Отпускник.Использование = Истина;
	
	ПолеЭлемента  = Отпускник.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОтпускаСотрудников.Имя);
	
	Отбор = Отпускник.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.ПревышениеЛимитаОтпуска"); 
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Истина;
	Отбор.Использование = Истина;
	Отпускник.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Аквамарин);
	
КонецПроцедуры

#КонецОбласти   

          
