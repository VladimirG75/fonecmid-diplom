
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	 
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора, ВКМ_СтоимостьЧасаРаботы");
	
	Если РеквизитыДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда 
		
		ОбщегоНазначения.СообщитьПользователю("Обслуживание доступно только по договору абонентского обслуживания. Проведение невозможно",,,,Отказ);
					
	ИначеЕсли РеквизитыДоговора.ВКМ_ДатаНачалаДействияДоговора > Дата Или РеквизитыДоговора.ВКМ_ДатаОкончанияДействияДоговора < Дата Тогда 
		
		ОбщегоНазначения.СообщитьПользователю("Обслуживание доступно только в период действия договора. Проведение невозможно",,,,Отказ);
		
	КонецЕсли;
	
	СтоимостьЧасаРаботы = РеквизитыДоговора.ВКМ_СтоимостьЧасаРаботы;	 
	
	ВсегоОтработаноЧасов = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
	
	ПроцентРаботыСпециалиста = ПолучитьПроцентОтРабот(Специалист, Дата);
	
	Если ПроцентРаботыСпециалиста = Неопределено Тогда
		
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("У сотрудника %1 не установлен процент от выполненных работ. Проведение невозможно", Специалист),,,, Отказ);
		
	КонецЕсли;
	
	Если ПроцентРаботыСпециалиста = 0 Тогда
		
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("У сотрудника %1 процент от выполненных работ равен 0.", Специалист));
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
		//Движения по регистру ВКМ_ВыполненныеКлиентуРаботы 
		ДвижениеКлиент = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		ДвижениеКлиент.Период = Дата;
		ДвижениеКлиент.Клиент = Клиент;
		ДвижениеКлиент.Договор = Договор;
		ДвижениеКлиент.КоличествоЧасов = ВсегоОтработаноЧасов;
		ДвижениеКлиент.СуммаКОплате = ВсегоОтработаноЧасов * РеквизитыДоговора.ВКМ_СтоимостьЧасаРаботы;
		
		//Движение по регистру ВКМ_выполненные сотрудником работы				 
		СуммаКОплате = ВсегоОтработаноЧасов * СтоимостьЧасаРаботы * ПроцентРаботыСпециалиста / 100;
		
		Если СуммаКОплате <> 0 Тогда
			ДвижениеСотрудник = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			ДвижениеСотрудник.Период = Дата;
			ДвижениеСотрудник.Сотрудник = Специалист;
			ДвижениеСотрудник.ЧасовКОплате = ВсегоОтработаноЧасов;
			ДвижениеСотрудник.СуммаКОплате = СуммаКОплате;
		КонецЕсли;
		
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		
		Текст = СтрШаблон("Создана новая заявка на обслуживание по контрагенту %1 от %2.
		|Дата проведения работ запланирована на %3, время с %4 по %5.
		|Специалист: %6.",
		Клиент, Дата, Формат(ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВремяНачалаРабот, "ДЛФ=T"), Формат(ВремяОкончанияРабот, "ДЛФ=T"), Специалист);
		Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьУведомлениеТелеграмм(Текст);
	Иначе
		РеквизитаОбъектаСтарые = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот, Специалист");
		
		РеквизитыОбъектаНовые = Новый Структура;
		РеквизитыОбъектаНовые.Вставить("ДатаПроведенияРабот", Формат(ДатаПроведенияРабот, "ДЛФ=D"));
		РеквизитыОбъектаНовые.Вставить("ВремяНачалаРабот", Формат(ВремяНачалаРабот, "ДЛФ=T"));
		РеквизитыОбъектаНовые.Вставить("ВремяОкончанияРабот", Формат(ВремяОкончанияРабот, "ДЛФ=T"));
		РеквизитыОбъектаНовые.Вставить("Специалист", Специалист);
		
		Если Не ОбщегоНазначения.ДанныеСовпадают(РеквизитаОбъектаСтарые, РеквизитыОбъектаНовые) Тогда
			
			Текст = СтрШаблон("В документе %1 изменились данные.
			|Дата проведения работ %2, время с %3 по %4.
			|Специалист: %5.",
			Ссылка, Формат(ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВремяНачалаРабот, "ДЛФ=T"), Формат(ВремяОкончанияРабот, "ДЛФ=T"), Специалист);
			Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьУведомлениеТелеграмм(Текст);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти



#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПроцентОтРабот(Специалист, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот
	               |ИЗ
	               |	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&ДатаДокумента, Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних"; 
		
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл;
		ПроцентОтРабот = Выборка.ПроцентОтРабот;	
	КонецЦикла;
	
	Возврат ПроцентОтРабот;
	
КонецФункции

#КонецОбласти

#КонецЕсли
