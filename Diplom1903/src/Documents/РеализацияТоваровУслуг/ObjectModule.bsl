
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	//{{Доработка ВКМ_АбонентскоеОбслуживание: движение по заказам покупателя по виду договора "Абонентское обслуживание" не производится
	//Движение = Движения.ОбработкаЗаказов.Добавить();
	//Движение.Период = Дата;
	//Движение.Контрагент = Контрагент;
	//Движение.Договор = Договор;
	//Движение.Заказ = Основание;
	//Движение.СуммаОтгрузки = СуммаДокумента;
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора");
	
	Если ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Движение = Движения.ОбработкаЗаказов.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Заказ = Основание;
		Движение.СуммаОтгрузки = СуммаДокумента;
	КонецЕсли;
	
	//}}Доработка ВКМ_АбонентскоеОбслуживание

    Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//{{Доработка ВКМ_АбонентскоеОбслуживание: основание по виду договора "Абонентское обслуживание" не предусмотрено
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора");
	
	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Основание"));
	КонецЕсли;	
	
	//}}Доработка ВКМ_АбонентскоеОбслуживание
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры


Процедура ВКМ_ВыполнитьАвтоЗаполнение() Экспорт
	
	//{{Доработка ВКМ_АбонентскоеОбслуживание: процедура выполняет автозаполнение табличной части на основании значений констант
	//"ВКМ_НоменклатураАбонентскаяПлата" и "ВКМ_НоменклатураРаботыСпециалиста"
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	ПустаяСсылкаНоменклатуры = Справочники.Номенклатура.ПустаяСсылка();
	
	Если НоменклатураАбонентскаяПлата = ПустаяСсылкаНоменклатуры Или НоменклатураРаботыСпециалиста = ПустаяСсылкаНоменклатуры Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Значения констант ""Номенклатура абонентская плата"" или ""Номенклатура работы специалиста"" не заполнены. Автозаполнение невозможно");
		Возврат;
		
	КонецЕсли;
	
	Услуги.Очистить();
	
	АбонентскаяПлатаПоДоговору = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_АбонентскаяПлата");
	
	Если АбонентскаяПлатаПоДоговору <> 0 Тогда
		
		СтрокаАбонентскойПлаты = Услуги.Добавить();
		СтрокаАбонентскойПлаты.Номенклатура = НоменклатураАбонентскаяПлата;
		СтрокаАбонентскойПлаты.Количество = 1;
		СтрокаАбонентскойПлаты.Цена = АбонентскаяПлатаПоДоговору;
		СтрокаАбонентскойПлаты.Сумма = АбонентскаяПлатаПоДоговору;
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0) КАК КоличествоОборот,
	                      |	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаОборот,
	                      |	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
	                      |ИЗ
	                      |	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(
	                      |			&НачалоПериода,
	                      |			&КонецПериода,
	                      |			,
	                      |			Договор = &Договор
	                      |				И Клиент = &Контрагент) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	                      |		ПО ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор = ДоговорыКонтрагентов.Ссылка");
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаРаботыСпециалиста = Услуги.Добавить();
		СтрокаРаботыСпециалиста.Номенклатура = НоменклатураРаботыСпециалиста;
		СтрокаРаботыСпециалиста.Цена = Выборка.СтоимостьЧасаРаботы;
		СтрокаРаботыСпециалиста.Количество = Выборка.КоличествоОборот;
		СтрокаРаботыСпециалиста.Сумма = Выборка.СуммаОборот;
			
	КонецЦикла;
	
	//}}Доработка ВКМ_АбонентскоеОбслуживание

	СуммаДокумента = Услуги.Итог("Сумма");
			
КонецПроцедуры

#КонецОбласти

#КонецЕсли
